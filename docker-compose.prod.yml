version: '3.8'

services:
  db:
    image: ankane/pgvector:latest
    container_name: slackbot-db-prod
    environment:
      POSTGRES_USER: ${DB_USER:-slackbot_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password}
      POSTGRES_DB: ${DB_NAME:-slackbot}
    volumes:
      - db_data_prod:/var/lib/postgresql/data
      - ./db/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-slackbot_user} -d ${DB_NAME:-slackbot}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - slackbot-network

  backend:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile.backend
    container_name: slackbot-backend-prod
    depends_on:
      db:
        condition: service_healthy
    environment:
      PORT: 8080
      DATABASE_URL: postgres://${DB_USER:-slackbot_user}:${DB_PASSWORD:-secure_password}@db:5432/${DB_NAME:-slackbot}?sslmode=disable
      FRONTEND_URL: ${FRONTEND_URL:-https://your-domain.com}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      SLACK_SIGNING_SECRET: ${SLACK_SIGNING_SECRET}
      SLACK_BOT_TOKEN: ${SLACK_BOT_TOKEN}
      SLACK_APP_TOKEN: ${SLACK_APP_TOKEN}
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - slackbot-network

  frontend:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile.frontend.prod
    container_name: slackbot-frontend-prod
    depends_on:
      backend:
        condition: service_healthy
    environment:
      NEXT_PUBLIC_API_URL: ${BACKEND_URL:-https://api.your-domain.com}
      NEXT_PUBLIC_FRONTEND_URL: ${FRONTEND_URL:-https://your-domain.com}
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - slackbot-network

  nginx:
    image: nginx:alpine
    container_name: slackbot-nginx-prod
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    restart: unless-stopped
    networks:
      - slackbot-network

volumes:
  db_data_prod:

networks:
  slackbot-network:
    driver: bridge
