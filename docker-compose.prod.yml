version: '3.8'

services:
  db:
    image: ankane/pgvector:latest
    container_name: slackbot-db-prod
    environment:
      POSTGRES_USER: ${DB_USER:-slackbot_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password}
      POSTGRES_DB: ${DB_NAME:-slackbot}
    volumes:
      - db_data_prod:/var/lib/postgresql/data
      - ./db/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-slackbot_user} -d ${DB_NAME:-slackbot}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - slackbot-network

  backend:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile.backend
    container_name: slackbot-backend-prod
    depends_on:
      - db
    environment:
      PORT: 8080
      DATABASE_URL: postgres://${DB_USER:-slackbot_user}:${DB_PASSWORD:-secure_password}@db:5432/${DB_NAME:-slackbot}?sslmode=disable
      FRONTEND_URL: ${FRONTEND_URL:-https://sales-develop.com}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      SLACK_SIGNING_SECRET: ${SLACK_SIGNING_SECRET}
      SLACK_BOT_TOKEN: ${SLACK_BOT_TOKEN}
      SLACK_APP_TOKEN: ${SLACK_APP_TOKEN}
      JWT_SECRET: ${JWT_SECRET}
      SSL_CERT_ID: ${SSL_CERT_ID}
    ports:
      - "8080:8080"
    # healthcheck:
    #   test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    restart: unless-stopped
    networks:
      - slackbot-network

  frontend:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile.frontend.prod
      args:
        NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}
        NEXT_PUBLIC_API_BASE: ${BACKEND_URL}
        NEXT_PUBLIC_FRONTEND_URL: ${FRONTEND_URL}
    container_name: slackbot-frontend-prod
    depends_on:
      - backend
    environment:
      NEXT_PUBLIC_API_URL: ${BACKEND_URL:-https://api.sales-develop.com}
      NEXT_PUBLIC_API_BASE: ${BACKEND_URL:-https://api.sales-develop.com}
      NEXT_PUBLIC_FRONTEND_URL: ${FRONTEND_URL:-https://sales-develop.com}
      NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}
    # Nginx 経由でプロキシするためホスト公開ポートは不要
    restart: unless-stopped
    networks:
      - slackbot-network

  nginx:
    image: nginx:alpine
    container_name: slackbot-nginx-prod
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    restart: unless-stopped
    networks:
      - slackbot-network

volumes:
  db_data_prod:

networks:
  slackbot-network:
    driver: bridge
