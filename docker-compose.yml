services:
  db:
    image: ankane/pgvector:latest
    container_name: slackbot-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: slackbot
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d slackbot"]
      interval: 10s
      timeout: 5s
      retries: 5

  maildev:
    image: maildev/maildev
    container_name: slackbot-maildev
    ports:
      - "1080:1080"
      - "1025:1025"

  auth:
    build: ./backend/authsvc
    container_name: slackbot-auth
    depends_on:
      db:
        condition: service_healthy
      maildev:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://user:password@db:5432/slackbot?sslmode=disable
      JWT_SECRET: please_change_me
      ACCESS_TOKEN_TTL_MIN: 15
      APP_ORIGIN: http://localhost:3000
      COOKIE_DOMAIN: localhost
      SMTP_HOST: maildev
      SMTP_PORT: 1025
      MAIL_FROM: Knowledge App <no-reply@local.test>
      PUBLIC_APP_URL: http://localhost:3000
    ports:
      - "8081:8081"
    # ヘルスチェック無効化（Distrolessイメージのため）
    healthcheck:
      disable: true
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile.backend
    container_name: slackbot-backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      PORT: 8080
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: slackbot
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      SLACK_SIGNING_SECRET: ${SLACK_SIGNING_SECRET:-}
      SLACK_BOT_TOKEN: ${SLACK_BOT_TOKEN:-}
      SLACK_APP_TOKEN: ${SLACK_APP_TOKEN:-}
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile.frontend
    container_name: slackbot-frontend
    depends_on:
      backend:
        condition: service_healthy
      auth:
        condition: service_started
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    restart: unless-stopped

volumes:
  db_data:
  node_modules:

